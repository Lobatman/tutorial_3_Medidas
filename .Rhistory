tabela_formatada <- data.frame("Frequencia Absoluta" = as.vector(tabela_freq_albumina_t),
"Frequencia Relativa" = as.vector(tabela_freq_albumina), "Frequencia Abs Baixo" = as.vector(freq_abs_acumulada))
peso_recem_nascidos <- c(2.5, 3.75, 2.25, 3.45, 3.75)
peso_recem_nascidos
mean(peso_recem_nascidos)
#Vetor do conjunto de dados
notas <- c(80, 85, 95)
#Vetor dos pesos
pesos <- c(6, 3, 1)
#Calculo da média
media_ponderada <- weighted.mean(notas, pesos)
#Resultado
media_ponderada
qtd_albumina <- c(5.1, 5, 5.2, 4.5, 4.8, 4.9, 5, 5.2, 5.4, 5.1, 4.9, 5, 4.9, 5.1, 5.3, 5.1, 5.1, 5.3, 4.7, 5.3, 4.7, 5.4, 5, 5.5, 5)
sort(qtd_albumina) #ordena os dados
range(qtd_albumina) #descobre o menor e o maior número
amp_total <- ceiling(max(qtd_albumina)-min(qtd_albumina))
amp_total
k <- nclass.FD(qtd_albumina)
length(qtd_albumina)
k <- ceiling((sqrt(length(qtd_albumina))))
c <- amp_total / (k-1)
infclass <- min(qtd_albumina)
supclass <- infclass + (k*c)
brk <- seq(infclass,supclass,c)
tabela_freq_albumina_t <- table(cut(qtd_albumina,breaks = brk, right = FALSE))
tabela_freq_albumina <- prop.table(tabela_freq_albumina_t)
library(knitr)
library(kableExtra)
tabela_formatada <- data.frame(FrequenciaAbsoluta = as.vector(tabela_freq_albumina_t),
FrequenciaRelativa = as.vector(tabela_freq_albumina))
tabela_formatada <- cbind(Intervalo = names(tabela_freq_albumina_t), tabela_formatada)
kable(tabela_formatada, align = "c") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
kable_styling(bootstrap_options = "condensed")
#Descobrindo a média para dados agrupados
xi <- (brk[-1] + brk[-length(brk)]) / 2
xi
media_agrupada <- sum(xi * tabela_freq_albumina) /
sum(tabela_freq_albumina)
media_agrupada
media_agrupada_1 <- weighted.mean(xi, tabela_freq_albumina)
media_agrupada_1
library(tidyverse)
library(dplyr)
semanas <- c(1, 2, 3, 4, 5)
infectados <- c(3, 9, 27, 81, 243)
tabela <- tibble(Semanas = semanas, "n° de infectados" = infectados)
library(kableExtra)
library(knitr)
kable(tabela) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
row_spec(0, bold = TRUE) %>%
row_spec(1:nrow(tabela), align = "c")
n_infectados <- c(3, 9, 27, 81, 243)
#Calculando a média Geométrica
media_geom <- prod(n_infectados)^(1/length(n_infectados))
media_geom
library(tidyverse)
library(dplyr)
dias <- c(1, 2, 3, 4, 5, 6, 7, 8)
mortos <- c(25, 85, 65, 45, 95, 75, 15, 35)
tabela_MM <- tibble(Dias = dias, "óbitos" = mortos)
library(kableExtra)
library(knitr)
kable(tabela_MM) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
row_spec(0, bold = TRUE) %>%
row_spec(1:nrow(tabela_MM), align = "c")
library(tidyverse)
library(zoo)
#criando o vetorde dados
mortos <- c(25, 85, 65, 45, 95, 75, 15, 35)
#calculando a média móvel
media_m <- rollmean(mortos, k = 3, fill = NA)
media_m
library(ggplot2)
#Criando um vetor para as observações com valores de 1 até o comprimento máximo
observacoes <- 1: length(mortos)
#Criando um dataframe
df <- data.frame(observacoes = 1:length(mortos), mortos, media_m)
# Plotando o gráfico
ggplot(df, aes(x = observacoes)) +
geom_line(aes(y = mortos, color = "Óbitos")) +
geom_line(aes(y = media_m, color = "Média Móvel")) +
geom_point(aes(y = mortos), color = "black") +
geom_point(aes(y = media_m), color = "red") +
labs(title = "Óbitos por COVID-19", x = "Dias", y = "Óbitos", color = "Legenda") +
scale_color_manual(values = c("red", "black")) +
theme_minimal()
library(kableExtra)
library(knitr)
ano <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)
n <- c(100, 100, 12, 10, 100, 100, 100, 100, 100, 100, 100)
tabela_lontras <- tabela_MM <- tibble(Ano = ano, n = n)
tabela_lontras %>%
kbl() %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
row_spec(0, bold = TRUE) %>%
row_spec(1:nrow(tabela_lontras), align = "c")
n <- c(100, 100, 12, 10, 100, 100, 100, 100, 100, 100, 100)
reciproco <- 1 / n
#calculando a média harmônica
media_harm <- length(n) / sum(reciproco)
media_harm
mediana_a <- c(2, 2, 4, 5, 6, 7, 8)
mediana_b <- c(3, 3, 4, 5, 7, 8, 9, 9)
median(mediana_a)
median(mediana_b)
freq_abs_acumulada <- cumsum(tabela_freq_albumina_t)
freq_abs_acumulada
library(knitr)
library(kableExtra)
tabela_formatada <- data.frame("Frequencia Absoluta" = as.vector(tabela_freq_albumina_t),
"Frequencia Relativa" = as.vector(tabela_freq_albumina), "Frequencia Abs Baixo" = as.vector(freq_abs_acumulada))
tabela_formatada <- cbind(Intervalo = names(tabela_freq_albumina_t), tabela_formatada)
kable(tabela_formatada, align = "c") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
kable_styling(bootstrap_options = "condensed")
# Retomadno a tabela de frequéncias do exemplo
tabela_freq_albumina_t <- table(cut(qtd_albumina, breaks = brk, right = FALSE))
# identificando o intervalo que contém a mediana
intervalo_mediana <- which(tabela_freq_albumina_t == max(tabela_freq_albumina_t))
intervalo_mediana
# Encontrando o limite inferior do intervalo que contém a mediana (LiRmd)
liRmd <- as.numeric(names(tabela_freq_albumina_t)[intervalo_mediana])
liRmd
# Retomadno a tabela de frequéncias do exemplo
tabela_freq_albumina_t <- table(cut(qtd_albumina, breaks = brk, right = TRUE))
# identificando o intervalo que contém a mediana
intervalo_mediana <- which(tabela_freq_albumina_t == max(tabela_freq_albumina_t))
intervalo_mediana
# Retomadno a tabela de frequéncias do exemplo
tabela_freq_albumina_t <- table(cut(qtd_albumina, breaks = brk, right = FALSE))
# identificando o intervalo que contém a mediana
intervalo_mediana <- which(tabela_freq_albumina_t == max(tabela_freq_albumina_t))
intervalo_mediana
# Encontrando a amplitude dos intervalos de classe (h)
h <- c[1]
h
# Encontrando o tamanho da amostra (n)
n <- sum(tabela_freq_albumina_t)
n
# Encontrando a frequência absoluta acumulada para baixo no intervalo anterior que contém a mediana (Fant)
fant <- sum(tabela_freq_albumina_t[1:(intervalo_mediana-1)])
fant
# Encontrando a frequência absoluta simples no intervalo que contém a mediana (Fmd)
fmd <- tabela_freq_albumina_t[intervalo_mediana]
fmd
mediana <- liRmd + h * ((n/2 - fant)/fmd)
mediana
mediana <- 5 + h * ((n/2 - fant)/fmd)
mediana
moda_a <- c(3, 4, 4, 5, 5, 6, 7, 8)
table(moda_a)
moda_a <- c(3, 4, 4, 5, 5, 6, 7, 8)
tabela_moda_a <-table(moda_a)
moda_calculo <- as.numeric(names(tabela_moda_a)[which.max(tabela_moda_a)]
moda_calculo
moda_calculo <- as.numeric(names(tabela_moda_a)[which.max(tabela_moda_a)])
moda_calculo
moda_a <- c(2, 3, 4, 4, 5, 6, 6, 7)
tabela_moda_a <-table(moda_a)
moda_calculo <- as.numeric(names(tabela_moda_a)[which.max(tabela_moda_a)])
moda_calculo
moda_a <- c(3, 4, 4, 5, 5, 5, 6, 7, 8)
tabela_moda_a <-table(moda_a)
moda_calculo <- as.numeric(names(tabela_moda_a)[which.max(tabela_moda_a)])
moda_calculo
moda_calculo <- subset (table (moda_a), table (moda_a) == max (table (moda_a)))
moda_calculo
moda_a <- c(3, 4, 4, 5, 5, 5, 6, 7, 8)
moda_calculo <- subset (table (moda_a), table (moda_a) == max (table (moda_a)))
moda_calculo
moda_a <- c(3, 4, 4, 5, 5, 5, 6, 7, 8)
table(moda_a)
moda_a <- c(2,3,4,4,5,6,6,7)
table(moda_a)
moda_calculo <- subset(table(moda_a), table(moda_a) == max (table(moda_a)))
moda_calculo
moda_a <- c(3, 4, 4, 5, 5, 5, 6, 7, 8)
table(moda_a)
moda_calculo <- subset(table(moda_a), table(moda_a) == max (table(moda_a)))
moda_calculo
setwd("E:/Victor/Faculdade/projeto_bioestatistica_r_2023/tutorial_1_v2.1")
setwd("E:/Victor/Faculdade/projeto_bioestatistica_r_2023/tutorial_2")
read.csv("amplitude_exemplo.csv", sep = ";", header = TRUE)
read.csv("amplitudes_exemplo.csv", sep = ";", header = TRUE)
amplitude_exemplo <- read.csv("amplitudes_exemplo.csv", sep = ";", header = TRUE)
amplitude_total_A <- max(amplitude_exemplo$altura_cm_A) - min(amplitude_exemplo$altura_cm_A)
amplitude_total_A
amplitude_total_B <- max(amplitude_exemplo$altura_cm_B) - min(amplitude_exemplo$altura_cm_B)
amplitude_total_B
varianca_coluna_B <- var(amplitude_exemplo$altura_cm_B)
varianca_coluna_B
peso_recem_nascidos <- c(2.5, 3.75, 2.25, 3.45, 3.75)
peso_recem_nascidos
mean(peso_recem_nascidos)
#Vetor do conjunto de dados
notas <- c(80, 85, 95)
#Vetor dos pesos
pesos <- c(6, 3, 1)
#Calculo da média
media_ponderada <- weighted.mean(notas, pesos)
#Resultado
media_ponderada
qtd_albumina <- c(5.1, 5, 5.2, 4.5, 4.8, 4.9, 5, 5.2, 5.4, 5.1, 4.9, 5, 4.9, 5.1, 5.3, 5.1, 5.1, 5.3, 4.7, 5.3, 4.7, 5.4, 5, 5.5, 5)
sort(qtd_albumina) #ordena os dados
range(qtd_albumina) #descobre o menor e o maior número
amp_total <- ceiling(max(qtd_albumina)-min(qtd_albumina))
amp_total
k <- nclass.FD(qtd_albumina)
length(qtd_albumina)
k <- ceiling((sqrt(length(qtd_albumina))))
c <- amp_total / (k-1)
infclass <- min(qtd_albumina)
supclass <- infclass + (k*c)
brk <- seq(infclass,supclass,c)
tabela_freq_albumina_t <- table(cut(qtd_albumina,breaks = brk, right = FALSE))
tabela_freq_albumina <- prop.table(tabela_freq_albumina_t)
library(knitr)
library(kableExtra)
tabela_formatada <- data.frame(FrequenciaAbsoluta = as.vector(tabela_freq_albumina_t),
FrequenciaRelativa = as.vector(tabela_freq_albumina))
tabela_formatada <- cbind(Intervalo = names(tabela_freq_albumina_t), tabela_formatada)
kable(tabela_formatada, align = "c") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
kable_styling(bootstrap_options = "condensed")
#Descobrindo a média para dados agrupados
xi <- (brk[-1] + brk[-length(brk)]) / 2
xi
media_agrupada <- sum(xi * tabela_freq_albumina) /
sum(tabela_freq_albumina)
media_agrupada
media_agrupada_1 <- weighted.mean(xi, tabela_freq_albumina)
media_agrupada_1
library(tidyverse)
library(dplyr)
semanas <- c(1, 2, 3, 4, 5)
infectados <- c(3, 9, 27, 81, 243)
tabela <- tibble(Semanas = semanas, "n° de infectados" = infectados)
library(kableExtra)
library(knitr)
kable(tabela) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
row_spec(0, bold = TRUE) %>%
row_spec(1:nrow(tabela), align = "c")
n_infectados <- c(3, 9, 27, 81, 243)
#Calculando a média Geométrica
media_geom <- prod(n_infectados)^(1/length(n_infectados))
media_geom
library(tidyverse)
library(dplyr)
dias <- c(1, 2, 3, 4, 5, 6, 7, 8)
mortos <- c(25, 85, 65, 45, 95, 75, 15, 35)
tabela_MM <- tibble(Dias = dias, "óbitos" = mortos)
library(kableExtra)
library(knitr)
kable(tabela_MM) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
row_spec(0, bold = TRUE) %>%
row_spec(1:nrow(tabela_MM), align = "c")
library(tidyverse)
library(zoo)
#criando o vetorde dados
mortos <- c(25, 85, 65, 45, 95, 75, 15, 35)
#calculando a média móvel
media_m <- rollmean(mortos, k = 3, fill = NA)
media_m
library(ggplot2)
#Criando um vetor para as observações com valores de 1 até o comprimento máximo
observacoes <- 1: length(mortos)
#Criando um dataframe
df <- data.frame(observacoes = 1:length(mortos), mortos, media_m)
# Plotando o gráfico
ggplot(df, aes(x = observacoes)) +
geom_line(aes(y = mortos, color = "Óbitos")) +
geom_line(aes(y = media_m, color = "Média Móvel")) +
geom_point(aes(y = mortos), color = "black") +
geom_point(aes(y = media_m), color = "red") +
labs(title = "Óbitos por COVID-19", x = "Dias", y = "Óbitos", color = "Legenda") +
scale_color_manual(values = c("red", "black")) +
theme_minimal()
library(kableExtra)
library(knitr)
ano <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)
n <- c(100, 100, 12, 10, 100, 100, 100, 100, 100, 100, 100)
tabela_lontras <- tabela_MM <- tibble(Ano = ano, n = n)
tabela_lontras %>%
kbl() %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
row_spec(0, bold = TRUE) %>%
row_spec(1:nrow(tabela_lontras), align = "c")
n <- c(100, 100, 12, 10, 100, 100, 100, 100, 100, 100, 100)
reciproco <- 1 / n
#calculando a média harmônica
media_harm <- length(n) / sum(reciproco)
media_harm
mediana_a <- c(2, 2, 4, 5, 6, 7, 8)
mediana_b <- c(3, 3, 4, 5, 7, 8, 9, 9)
median(mediana_a)
median(mediana_b)
freq_abs_acumulada <- cumsum(tabela_freq_albumina_t)
freq_abs_acumulada
library(knitr)
library(kableExtra)
tabela_formatada <- data.frame("Frequencia Absoluta" = as.vector(tabela_freq_albumina_t),
"Frequencia Relativa" = as.vector(tabela_freq_albumina), "Frequencia Abs Baixo" = as.vector(freq_abs_acumulada))
tabela_formatada <- cbind(Intervalo = names(tabela_freq_albumina_t), tabela_formatada)
kable(tabela_formatada, align = "c") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
kable_styling(bootstrap_options = "condensed")
# Retomadno a tabela de frequéncias do exemplo
tabela_freq_albumina_t <- table(cut(qtd_albumina, breaks = brk, right = FALSE))
# identificando o intervalo que contém a mediana
intervalo_mediana <- which.max(tabela_freq_albumina_t)
intervalo_mediana
# Encontrando o limite inferior do intervalo que contém a mediana (LiRmd)
liRmd <- as.numeric(names(tabela_freq_albumina_t)[intervalo_mediana])
liRmd
# Encontrando a amplitude dos intervalos de classe (h)
h <- c[1]
h
# Encontrando o tamanho da amostra (n)
n <- sum(tabela_freq_albumina_t)
n
# Encontrando a frequência absoluta acumulada para baixo no intervalo anterior que contém a mediana (Fant)
fant <- sum(tabela_freq_albumina_t[1:(intervalo_mediana-1)])
fant
# Encontrando a frequência absoluta simples no intervalo que contém a mediana (Fmd)
fmd <- tabela_freq_albumina_t[intervalo_mediana]
fmd
mediana <- 5 + h * ((n/2 - fant)/fmd)
mediana
moda_a <- c(3, 4, 4, 5, 5, 5, 6, 7, 8)
table(moda_a)
moda_calculo <- subset(table(moda_a), table(moda_a) == max (table(moda_a)))
moda_calculo
#Retomadno a tabela de frequéncias do exemplo
tabela_freq_albumina_t <- table(cut(qtd_albumina, breaks = brk, right = FALSE))
#Encontrando o indice da classe da modal
indice_moda <- which.max(tabela_freq_albumina_t)
indice_moda
#Encontrando a frequência modal
frequencia_modal <- tabela_freq_albumina_t[indice_moda]
frequencia_modal
frequencia_anterior <- tabela_freq_albumina_t[indice_moda - 1]
frequencia_anterior
frequencia_seguinte <- tabela_freq_albumina_t[indice_moda + 1]
frequencia_seguinte
amplitude_modal <- c[1]
amplitude_modal
delta1 <- frequencia_modal - frequencia_anterior
delta1
delta2 <- frequencia_modal - frequencia_seguinte
delta2
moda_agrupada <- brk[indice_moda] + (delta1 / (delta1 + delta2)) * amplitude_modal
moda_agrupada
amplitude_exemplo <- read.csv("amplitudes_exemplo.csv", sep = ";", header = TRUE)
amplitude_total_B <- max(amplitude_exemplo$altura_cm_B) - min(amplitude_exemplo$altura_cm_B)
amplitude_total_B
varianca_coluna_B <- var(amplitude_exemplo$altura_cm_B)
varianca_coluna_B
tabela_formatada <- data.frame(FrequenciaAbsoluta = as.vector(tabela_freq_albumina_t),
FrequenciaRelativa = as.vector(tabela_freq_albumina))
tabela_formatada <- cbind(Intervalo = names(tabela_freq_albumina_t), tabela_formatada)
kable(tabela_formatada, align = "c") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
kable_styling(bootstrap_options = "condensed")
```
ponto_medio_classes <- (brk[-1] + brk[-length(brk)]) / 2
ponto_medio_classes
qtd_albumina <- c(5.1, 5, 5.2, 4.5, 4.8, 4.9, 5, 5.2, 5.4, 5.1, 4.9, 5, 4.9, 5.1, 5.3, 5.1, 5.1, 5.3, 4.7, 5.3, 4.7, 5.4, 5, 5.5, 5)
sort(qtd_albumina) #ordena os dados
range(qtd_albumina) #descobre o menor e o maior número
amp_total <- ceiling(max(qtd_albumina)-min(qtd_albumina))
k <- nclass.FD(qtd_albumina)
length(qtd_albumina)
k <- ceiling((sqrt(length(qtd_albumina))))
c <- amp_total / (k-1)
infclass <- min(qtd_albumina)
supclass <- infclass + (k*c)
brk <- seq(infclass,supclass,c)
tabela_freq_albumina_t <- table(cut(qtd_albumina,breaks = brk, right = FALSE))
tabela_freq_albumina <- prop.table(tabela_freq_albumina_t)
ponto_medio_classes <- (brk[-1] + brk[-length(brk)]) / 2
ponto_medio_classes
library(knitr)
library(kableExtra)
tabela_formatada <- data.frame(FrequenciaAbsoluta = as.vector(tabela_freq_albumina_t),
FrequenciaRelativa = as.vector(tabela_freq_albumina),
xi = as.vector(ponto_medio_classes))
tabela_formatada <- cbind(Intervalo = names(tabela_freq_albumina_t), tabela_formatada)
kable(tabela_formatada, align = "c") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
kable_styling(bootstrap_options = "condensed")
soma_fixi <- sum(tabela_freq_albumina_t * ponto_medio_classes)
soma_fixi
soma_fi <- sum(tabela_freq_albumina_t)
soma_fi
variancia_classes <- (sum((fi * xi)^2 / soma_fi - (soma_fixi^2 / soma_fi^2)) / (soma_fi -1))
variancia_classes <- (sum((tabela_freq_albumina_t * ponto_medio_classes)^2 / soma_fi - (soma_fixi^2 / soma_fi^2)) / (soma_fi -1))
variancia_classes
fixi_quadrado <- soma_fi^2
fixi_quadrado
```{r, message=FALSE, warning=FALSE}
fixi_quadrado <- soma_fi^2
fixi_quadrado
variancia_classes <- (sum(fixi_quadrado - (soma_fixi / soma_fi)^2) / (soma_fi - 1))
variancia_classes
variancia_classes <- ((fixi_quadrado - (soma_fixi / soma_fi)^2) / (soma_fi - 1))
variancia_classes
variancia_classes <- (sum(fixi_quadrado - (soma_fixi / soma_fi)^2) / (soma_fi - 1))
variancia_classes
variancia_classes <- (sum((tabela_freq_albumina_t * ponto_medio_classes)^2 / soma_fi - (soma_fixi^2 / soma_fi^2)) / (soma_fi -1))
variancia_classes
variancia_classes <- (sum(fixi_quadrado - (soma_fixi / soma_fi)^2) / (soma_fi - 1))
variancia_classes
fixi_quadrado <- soma_fixi^2
fixi_quadrado
variancia_classes <- (sum(fixi_quadrado - (soma_fixi / soma_fi)^2) / (soma_fi - 1))
variancia_classes
fixi_quadrado <- sum((tabela_freq_albumina_t * ponto_medio_classes)^2)
fixi_quadrado
fixi_quadrado <- sum((tabela_freq_albumina_t * (ponto_medio_classes)^2))
fixi_quadrado
variancia_classes <- (sum(fixi_quadrado - (soma_fixi / soma_fi)^2) / (soma_fi - 1))
variancia_classes
variancia_classes <- (sum(fixi_quadrado - ((soma_fixi)^2 / soma_fi)) / (soma_fi - 1))
variancia_classes
library(knitr)
library(kableExtra)
tabela_formatada <- data.frame(FrequenciaAbsoluta = as.vector(tabela_freq_albumina_t),
FrequenciaRelativa = as.vector(tabela_freq_albumina),
xi = as.vector(ponto_medio_classes),
fi(xi)^2 = as.vector(fixi_quadrado),
library(knitr)
library(kableExtra)
tabela_formatada <- data.frame(FrequenciaAbsoluta = as.vector(tabela_freq_albumina_t),
FrequenciaRelativa = as.vector(tabela_freq_albumina),
xi = as.vector(ponto_medio_classes),
fixi_quadrado = as.vector(fixi_quadrado),
fixi = as.vector(soma_fixi))
tabela_formatada <- cbind(Intervalo = names(tabela_freq_albumina_t), tabela_formatada)
kable(tabela_formatada, align = "c") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
kable_styling(bootstrap_options = "condensed")
library(knitr)
library(kableExtra)
tabela_formatada <- data.frame(FrequenciaAbsoluta = as.vector(tabela_freq_albumina_t),
FrequenciaRelativa = as.vector(tabela_freq_albumina),
xi = as.vector(ponto_medio_classes),
fi(xi)_quadrado = as.vector(fixi_quadrado),
library(knitr)
library(kableExtra)
tabela_formatada <- data.frame(FrequenciaAbsoluta = as.vector(tabela_freq_albumina_t),
FrequenciaRelativa = as.vector(tabela_freq_albumina),
xi = as.vector(ponto_medio_classes),
fixi_quadrado = as.vector(fixi_quadrado),
fixi = as.vector(soma_fixi))
tabela_formatada <- cbind(Intervalo = names(tabela_freq_albumina_t), tabela_formatada)
kable(tabela_formatada, align = "c") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
kable_styling(bootstrap_options = "condensed")
library(knitr)
library(kableExtra)
tabela_formatada <- data.frame(FrequenciaAbsoluta = as.vector(tabela_freq_albumina_t),
FrequenciaRelativa = as.vector(tabela_freq_albumina),
xi = as.vector(ponto_medio_classes),
"fi(xi)²" = as.vector(fixi_quadrado),
fixi = as.vector(soma_fixi))
tabela_formatada <- cbind(Intervalo = names(tabela_freq_albumina_t), tabela_formatada)
kable(tabela_formatada, align = "c") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
kable_styling(bootstrap_options = "condensed")
library(knitr)
library(kableExtra)
tabela_formatada <- data.frame(FrequenciaAbsoluta = as.vector(tabela_freq_albumina_t),
FrequenciaRelativa = as.vector(tabela_freq_albumina),
xi = as.vector(ponto_medio_classes),
"fi(xi)^2" = as.vector(fixi_quadrado),
fixi = as.vector(soma_fixi))
tabela_formatada <- cbind(Intervalo = names(tabela_freq_albumina_t), tabela_formatada)
kable(tabela_formatada, align = "c") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
kable_styling(bootstrap_options = "condensed")
library(knitr)
library(kableExtra)
tabela_formatada <- data.frame(FrequenciaAbsoluta = as.vector(tabela_freq_albumina_t),
FrequenciaRelativa = as.vector(tabela_freq_albumina),
xi = as.vector(ponto_medio_classes),
fixi_quadrado = as.vector(fixi_quadrado),
fixi = as.vector(soma_fixi))
tabela_formatada <- cbind(Intervalo = names(tabela_freq_albumina_t), tabela_formatada)
kable(tabela_formatada, align = "c") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
kable_styling(bootstrap_options = "condensed")
